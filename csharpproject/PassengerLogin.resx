<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>